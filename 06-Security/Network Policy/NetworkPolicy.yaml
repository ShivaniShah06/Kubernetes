# This file is used to define and link a network policy with a pod
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: <policy_name>
spec:
  # This pod selector maps policy with the pod where it needs to be applied
  podSelector:
    matchLabels:
      role: <role_name>
  policyTypes:
  - Ingress 
  - Egress # If you don't mention Egress here, it means that all Egress traffic will be allowed and nothing will be blocked  
  ingress:
  - from:
      # We have defined 2 rules for ingress. First one means that the pod sending the traffic has
      # to have a matching label and has to belong to a specific namespace
      # 2nd rule is added with an OR condition
      # We can also add a `-` in from of namespaceSelector to make it a separate rule 
    - podSelector:
        matchLabels:
          name: <app_label_name>
      namespaceSelector: # Optional. If you only mention namespace and not podSelector, then all the pods in that namespace will be allowed to send traffic to our pod
        matchLabels:
          name: <prod/dev/stg>
    - ipBlock: # Allows you to specify a range of ip addresses from which you could allow traffic to hit our pod     
        cidr: <cidr_range>
    ports:
    - protocol: TCP
      port: <port_number> 
  egress:
    # All 3 rules below are applied with an OR condition
  - to:
    - podSelector:
        matchLabels:
          name: <app_label_name>
    - namespaceSelector:
        matchLabels:
          name: <prod/dev/stg>
    - ipBlock:
        cidr: <cidr_range>
    ports:
    - protocol: TCP
      port: <port_number>
  # Allowing Egress traffic to TCP and UDP port
  # This can be added to ensure that the internal DNS resolution works from the pod for which policy has been defined
  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP


      